require("reflect-metadata");
require("./inject");
const { ipcRenderer } = require("electron");

global.__VOXER_PRELOAD__ = true;

const { contextBridge } = require("electron");
<% if (isTs) { %>
let config = require("./dist/voxer.config.js");
<% } else { %>
let config = require("../voxer.config.js");
<% } %>

if (config.default) {
    config = config.default;
}

window.addEventListener("DOMContentLoaded", () => {});

contextBridge.exposeInMainWorld("voxer", {
    title: config.window?.title,
});

<% if (isTs) { %>
require("./dist/src/main").preload?.();
<% } else { %>
require("../src/main").preload?.();
<% } %>

<% if (isTs) {  %>
const { inject: getInjectables} = require("./dist/src/main.js");
<% } else { %>
const { inject: getInjectables } = require("../src/main.js");
<% } %>

if (getInjectables) {
    const injectables = getInjectables();

    for (const injectable of injectables) {
        const api = {};

        for (const method of injectable.__exposedMethods) {
            api[method] = () => ipcRenderer.send(injectable.name + "." + method);
        }

        contextBridge.exposeInMainWorld(injectable.name, api);
    }
}